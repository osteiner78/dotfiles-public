{
:profiles {
    :Default {
        :default true

        :sim     25     ;; simultaneous key press threshold (def: 50)
                        ;; simlayer is implemented with to_if_alone and simultaneous key press feature
                        ;; if keydown event for two different keys are pressed within :sim ms, the keypresses are considered simultaneous
        :delay   500    ;; to_delayed_action_delay_milliseconds (def: 500)
                       ;; checkout karabiner's documentation
                       ;; https://pqrs.org/osx/karabiner/json.html
                       ;; basically it means time after which the key press is count delayed

                        ;; after :delay ms, the key press is considered to be delayed
                        ;; (used for double-press macros)
        :alone   1000    ;; to_if_alone_timeout_milliseconds (def: 1000)
                        ;; https://pqrs.org/osx/karabiner/json.html#to-if-alone
                        ;; affects to_if_alone behavior
                        ;; simlayer is implemented with to_if_alone and simultaneous key press feature

                        ;; if keyup event comes within :alone ms from keydown, the key is not just pressed but held
        :held    500    ;; to_if_held_down_threshold_milliseconds (def: 500)
                        ;; key is fired twice when :held ms is elapsed (otherwise seen as a hold command) (TODO WHAT IS THIS??)
    }
} 

:templates {    :launch "open -a \"%s\""
                :yabai "/opt/homebrew/bin/yabai %s"} ;; Should not need to specify full path, something wrong in $PATH definition

:layers {:hyper_layer {:key :caps_lock} ;;hyper_layer when pressing caps-lock}
;;      couldn't create yabai_layer using both left_control and left_shift
        ;;  :yabai_layer {:key :left_shift :modi {:mandatory :left_control}}    
} 

:main [
        {:des "Caps Lock â†’ Escape (if alone) | Caps Lock (simple)"
        ;;  CapsLock to Hyperkey:
        ;;  :rules [[:##caps_lock :!CTOleft_shift nil {:alone [:escape]}]]
         :rules [[:##caps_lock :caps_lock nil {:alone [:escape]}]]}
        
        {:des "Launch apps with hyperkey"
        :rules [:hyper_layer
                [:1 [:launch "/Applications/1Password.app"]]
                [:a [:launch "/Applications/Arc.app"]]
                [:c [:launch "/System/Applications/Calendar.app"]]
                [:d [:launch "/opt/homebrew/bin/dark-mode"]]
                [:f [:launch "/System/Library/CoreServices/Finder.app"]]
                [:g [:launch "~/Applications/Gmail.app"]]
                [:h [:launch "/Applications/Things3.app"]]
                [:m [:launch "~/Applications/'Google Maps'.app"]]
                [:o [:launch "/Applications/Obsidian.app"]]
                [:p [:launch "/Applications/'PDF Expert'.app"]]
                [:s [:launch "/Applications/Dash.app"]]
                [:t [:launch "/Applications/iTerm.app"]]
                [:v [:launch "/Applications/'Visual Studio Code'.app"]]
                [:w [:launch "/Applications/Whatsapp.app"]]
                [:equal_sign [:launch "/Applications/'Soulver 3'.app"]]]}

        {:des "Home and End keys"
         :rules [
                [:home :!Cleft_arrow]
                [:end :!Cright_arrow]]}

        {:des "Next/Previous tab"
         :rules [
                [:!Epage_up :!QRopen_bracket]
                [:!Epage_down :!QRclose_bracket]]}
        
;;              ============== YABAI RULES =================
        {:des "Yabai rules"
        :rules[
;;              ============== WINDOWS NAVIGATION =================
;;              Change window focus within space - Alt/Option
                [:!Oj [:yabai "-m window --focus south"]]
                [:!Ok [:yabai "-m window --focus north"]]
                [:!Oh [:yabai "-m window --focus west"]]
                [:!Ol [:yabai "-m window --focus east"]]

;;              Swap windows - Shift+Ctrl
                [:!STj [:yabai "-m window --swap south"]]
                [:!STk [:yabai "-m window --swap north"]]
                [:!STh [:yabai "-m window --swap west"]]
                [:!STl [:yabai "-m window --swap east"]]

;;              Move window and split - Ctrl+Alt
                [:!TOj [:yabai "-m window --warp south"]]
                [:!TOk [:yabai "-m window --warp north"]]
                [:!TOh [:yabai "-m window --warp west"]]
                [:!TOl [:yabai "-m window --warp east"]]

;;              Roate layout clockwise - Shift+Ctrl
                [:!STr [:yabai "-m space --rotate 270"]]

;;              Flip along x or y-axis - Shift+Ctrl
                [:!STx [:yabai "-m space --mirror x-axis"]]
                [:!STy [:yabai "-m space --mirror y-axis"]]

;;              Balance out tree of windows (resize to occupy) - Shift+Ctrl
                [:!STe [:yabai "-m space --balance"]]
                
;;              Maximize window - Shift+Ctrl
                [:!STreturn_or_enter [:yabai "-m window --toggle zoom-fullscreen"]]

;;              Toggle window float - Shift+Ctrl
                [:!STt [:yabai "-m window --toggle float --grid 4:4:1:1:2:2"]]

;;              Toggle space layout (bsp/float) - Shift+Ctrl
                ;; [:!STv "/opt/homebrew/bin/yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" else "bsp" end')"]
                ;; [:!STv "/opt/homebrew/bin/yabai -m space --layout $(/opt/homebrew/bin/yabai -m query --spaces --space | jq -r 'if .type == 'bsp' then 'float' else 'bsp' end')"]

;;              Toggle paddings
                [:!STp [:yabai "-m space --toggle padding --toggle gap"]]
 
;;              ============== SPACES NAVIGATION =================
;;              Move window to space # - Shift+Ctrl
                [:!ST1 [:yabai "-m window --space 1 ; /opt/homebrew/bin/yabai -m space --focus 1"]]
                [:!ST2 [:yabai "-m window --space 2 ; /opt/homebrew/bin/yabai -m space --focus 2"]]
                [:!ST3 [:yabai "-m window --space 3 ; /opt/homebrew/bin/yabai -m space --focus 3"]]
                [:!ST4 [:yabai "-m window --space 4 ; /opt/homebrew/bin/yabai -m space --focus 4"]]
                [:!ST5 [:yabai "-m window --space 5 ; /opt/homebrew/bin/yabai -m space --focus 5"]]
                [:!ST6 [:yabai "-m window --space 6 ; /opt/homebrew/bin/yabai -m space --focus 6"]]
                [:!ST7 [:yabai "-m window --space 7 ; /opt/homebrew/bin/yabai -m space --focus 7"]]
                [:!ST8 [:yabai "-m window --space 8 ; /opt/homebrew/bin/yabai -m space --focus 8"]]
                [:!ST9 [:yabai "-m window --space 9 ; /opt/homebrew/bin/yabai -m space --focus 9"]]

;;              Move window to Previous and Next space # - Shift+Ctrl
                [:!STcomma [:yabai "-m window --space prev ; /opt/homebrew/bin/yabai -m space --focus prev"]]
                [:!STperiod [:yabai "-m window --space next ; /opt/homebrew/bin/yabai -m space --focus next"]]

;;              Alternate to recent space - Shift+Ctrl
                [:!STx [:yabai "-m space --focus recent"]]
                [:!STm [:yabai "-m space --focus prev"]]
                [:!STslash [:yabai "-m space --focus next"]]

;;              ============== DISPLAY NAVIGATION =================
;;              Move window to left and right display # - Shift+Ctrl
                [:!STopen_bracket [:yabai "-m window --display west ; /opt/homebrew/bin/yabai -m display --focus west"]]
                [:!STclose_bracket [:yabai "-m window --display east ; /opt/homebrew/bin/yabai -m display --focus east"]]

;;              Change focus between external displays # - Control
                [:!Topen_bracket [:yabai "-m display --focus west"]]
                [:!Tclose_bracket [:yabai "-m display --focus east"]]

;;              ====================== SYSTEM ======================
;;              Start/Stop yabai - Shift+Ctrl
                [:!STq [:yabai "--stop-service"]]
                [:!STw [:yabai "--start-service"]]
                [:!STv [:yabai "--restart-service"]]
        ]}
        ]
}

;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | command + control + optional + shift (hyper)
;; ## | optional any
